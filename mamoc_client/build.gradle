buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "0.14"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'

    testImplementation 'junit:junit:4.12'
    implementation 'com.google.code.gson:gson:2.8.5'

    /* The reason we are including autobahn source code instead of dependency is that it does not
    support API < 24 due to Completable Future which is only available in JDK 8. We modify the
    CompletableFuture and other classes with backwards compatible streamsupport-cfuture library
   */

    // api 'io.crossbar.autobahn:autobahn-android:18.5.1'

    // Autobahn dependencies
    api 'com.fasterxml.jackson.core:jackson-core:2.9.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.9.5'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.8.16'

    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.6.2'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2') {
        exclude group: 'com.google.code.findbugs'
    }

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // DEPENDENCIES FOR JaDX
//    implementation files('libs/dx-1.10.jar')
//    implementation files('libs/android-5.1-clst-core.jar')
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'uk.com.robust-it:cloning:1.9.2'
    implementation 'com.intellij:annotations:12.0@jar'

    // DEX2JAR and its dependencies
    implementation 'com.google.guava:guava:18.0'
    implementation 'asm:asm-all:3.3.1'

//    implementation files('libs/antlr-3.1.1.jar')
//    implementation files('libs/dex-ir-1.12.jar')
//    implementation files('libs/dex-reader-1.15.jar')
//    implementation files('libs/dex-tools-0.0.9.15.jar')
//    implementation files('libs/dex-translator-0.0.9.15.jar')
//    implementation files('libs/jsr305-1.3.9.jar')
//
//    // CLASS FILE READER - JAVA DECOMPILER
//    implementation files('libs/cfr_0_117.jar')

    // APACHE COMMONS LIBRARIES
    implementation 'commons-cli:commons-cli:1.3.1'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.apache.commons:commons-math3:3.6.1'

    //ClassIndex for Annotation indexing
    implementation 'org.atteo.classindex:classindex:3.4'
}

ext {
    bintrayRepo = 'mamoc_client'
    bintrayName = 'mamoc_client'

    publishedGroupId = 'uk.ac.standrews.cs'
    libraryName = 'mamoc_client'
    artifact = 'mamoc_client'

    libraryDescription = 'A framework for offloading parts of a mobile application to nearby mobile devices, ' +
            'edge devices (cloudlets), and remote clouds '
    siteUrl = 'https://github.com/dawand/MAMoC-Android'
    gitUrl = 'https://github.com/dawand/MAMoC-Android.git'

    libraryVersion = '0.14'

    developerId = 'djs21'
    developerName = 'Dawand Sulaiman'
    developerEmail = 'djs21@st-andrews.ac.uk'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}